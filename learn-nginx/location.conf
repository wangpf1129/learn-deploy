# location [ = | ~ | ~* | ^~ ] uri { ... }

# =  精确匹配。优先级最高
# ^~ 前缀匹配，优先级其次
# ~  正则匹配，优先级再次 (~* 只是不区分大小写，不单列)
# /  通用前缀匹配，优先级再次

server {
    listen       80;
    server_name  localhost;

    root   /usr/share/nginx/html;
    index  index.html index.htm;

    # 这里采用 text/plain，不会自动下载文件 (当没有文件后缀名时)
    default_type text/plain;

    # 通用匹配，所有 /xxx 任意路径都会匹配其中的规则
    # 访问 / 会发现有 X-Hello: wangpf 响应头
    location / {
        expires -1;

        add_header X-Hello wangpf;
        add_header X-Config A;

        # 所有找不到的路径都会默认走 /index.html 页面
        # cleanUrls: try_files $uri $uri.html; 可省略 .html 后缀直接访问
        try_files  $uri $uri.html $uri/index.html /index.html;
    }

    # 访问 http://localhost:8882/about.html，走该匹配路径
    location = /about.html {
        add_header X-Location =/about.html;
        add_header X-Config B;
    }

    # 访问 http://localhost:8882/hello，走该匹配路径，但此时资源不存在，返回 404
    location = /hello{
        add_header X-Location =/hello;
        add_header X-Config C;
    }

    # ~ 表示区分大小写的正则匹配
    # 该正则表示以 /wang开头的路径
    # 访问 http://localhost:8882/wangpf，走该匹配路径，访问成功
    # 访问 http://localhost:8882/wang，走该匹配路径，访问成功
    location ~ ^/wang {
        add_header X-Config E;
    }
}